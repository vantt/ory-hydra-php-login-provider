###########################################################################
#######             FOR DEMONSTRATION PURPOSES ONLY                 #######
###########################################################################
#                                                                         #
# If you have not yet read the tutorial, do so now:                       #
#  https://www.ory.sh/docs/hydra/5min-tutorial                            #
#                                                                         #
# This set up is only for demonstration purposes. The login               #
# endpoint can only be used if you follow the steps in the tutorial.      #
#                                                                         #
###########################################################################

version: '3.5'

networks:
    default:
        driver: bridge
    proxy:
        external: true
        name: https-proxy

volumes:
#    # this is for Native Linux (Ubuntu)
#    appVolume:
#        driver: local
#        driver_opts:
#            type: bind
#            device: ${PROJECT_FOLDER}

    # this is for MacOS
    appVolume:
        driver: local
        driver_opts:
            type: nfs
            o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
            device: ":/System/Volumes/Data/$PWD/${PROJECT_FOLDER}"

services:
    roadrunner:
        #build: ./build
        image: devops/roadrunner:1.6.4
        #ports:
        #    - 8080:8080 # dont need to expose here since traefik will do forwarding
        volumes:
            - appVolume:/app
        networks:
            proxy: {}     # road runner will communicate with the world (expose) through this network
            default: {}   # it will communicate with other internal services here
        labels:
            # https://docs.traefik.io/reference/dynamic-configuration/docker/
            - traefik.enable=true # expose this container through traefik
            - traefik.http.services.identityProvider.loadbalancer.server.port=8080
            - traefik.http.routers.identityProvider.entrypoints=http
            - traefik.http.routers.identityProvider.rule=Host(`id.dev.mio`)
            #- traefik.http.routers.identityProvider.rule=Host(`id.dev.mio`) && Path(`/login`,`/consent`,`/logout`)
            - traefik.http.routers.identityProvider.service=identityProvider
            - traefik.http.routers.identityProvider.tls=false
            - traefik.http.routers.identityProvider.tls.certresolver=false

    dumpserver:
        image: devops/phpcli:7.4.4
        ports:
            - 9912:9912
        volumes:
            - appVolume:/app
        command: "php bin/console server:dump"
        networks:
            default: {}